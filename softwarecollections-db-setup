#!/bin/bash

NAME=softwarecollections
DATADIR=/var/lib/pgsql/$NAME
SOCKETDIR=/var/scls/db
PORT=5432
SOCKET=$SOCKETDIR/.s.PGSQL.$PORT
SERVICE=postgresql@${NAME}.service

log() {
    if [ -t 1 ]; then
        echo -e "\033[1;36m$1\033[0m"
    else
        echo "$1"
    fi
}

if ! test -d $DATADIR; then
    log "Create datadir"
    postgresql-setup --initdb --unit postgresql@$NAME \
        --new-systemd-unit --datadir $DATADIR --port $PORT

    log "Configure database"
    sed -r -i \
        -e "s|^#* *listen_addresses.*|listen_addresses = ''|" \
        -e "s|^#* *unix_socket_directories.*|unix_socket_directories = '$SOCKETDIR'|" \
        $DATADIR/postgresql.conf
    sed -r -i 's/(local +all +all +).*/\1trust/' $DATADIR/pg_hba.conf
fi

if ! semanage port -l | grep $PORT >/dev/null; then
    log "Enable port $PORT in selinux"
    semanage port -a -t postgresql_port_t -p tcp $PORT
fi

if ! ls -dZ $SOCKETDIR | grep -q postgresql_var_run_t; then
    log "Enable socket directory in selinux"
    semanage fcontext -a -t postgresql_var_run_t $SOCKETDIR
    restorecon $SOCKETDIR
fi

if ! test -L /etc/systemd/system/multi-user.target.wants/$SERVICE; then
    log "Enable $SERVICE"
    systemctl enable $SERVICE
fi

if ! test -S $SOCKET; then
    log "Start $SERVICE"
    systemctl start $SERVICE || \
    systemctl status $SERVICE
fi

if test -S $SOCKET && ! echo | su - softwarecollections -c "psql -h $SOCKETDIR -p $PORT -U softwarecollections" 2>/dev/null; then
    log "Create database user"
    su - postgres -c "createuser -h $SOCKETDIR -p $PORT softwarecollections"
fi

if test -S $SOCKET && ! echo | su - softwarecollections -c "psql -h $SOCKETDIR -p $PORT -d softwarecollections" 2>/dev/null; then
    log "Create database"
    su - postgres -c "createdb -h $SOCKETDIR -p $PORT softwarecollections"
fi

exec softwarecollections migrate

